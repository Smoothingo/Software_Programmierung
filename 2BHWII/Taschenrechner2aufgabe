#Taschenrechner2.0 Kattner (war krank also bitte Bewerten sie nett)


# DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF DEF  DEF DEF  DEF DEF  DEF DEF  DEF DEF  DEF DEF  DEF DEF  DEF DEF  DEF DEF<<<<

# Rechnet much plus dumm
def Addieren(much, dumm):
    return much + dumm

# Rechnet much minus dumm
def Subtrahieren(much, dumm):
    return much - dumm

# multipliziert much mit dumm
def Multiplizieren(much, dumm):
    return much * dumm

# dividiert much durch dumm
def Dividieren(much, dumm):
    return much / dumm

# Berechnet much mit der Zahl die bei dumm angegeben wurde als Potenzieren
def Potenzieren(much, dumm):       
    return much ** dumm





while True:

    print("Wähle Rechenoperation.")
    print("1.Addieren")
    print("2.Subtrahieren")
    print("3.Multiplizieren")
    print("4.Dividieren")
    print("5.Potenzieren")


    Operatoren = input("Wähle( 1 ; 2 ; 3 ; 4 ; 5): ")      # schaut was man eingibt und packt es in variable

    
    if Operatoren in ('1', '2', '3', '4', '5'):               #schaut ob es eh ein Operator ist denn es gibt
        zahl1 = float(input("Erste Zahl: "))
        zahl2 = float(input("Zweite zahl: "))
        
        if Operatoren == '1':
            print(zahl1, "+", zahl2, "=", Addieren(zahl1, zahl2))

        elif Operatoren == '2':
            print(zahl1, "-", zahl2, "=", Subtrahieren(zahl1, zahl2))

        elif Operatoren == '3':
            print(zahl1, "*", zahl2, "=", Multiplizieren(zahl1, zahl2))

        elif Operatoren == '4':
            print(zahl1, "/", zahl2, "=", Dividieren(zahl1, zahl2))
        
        elif Operatoren == '5':
            print(zahl1, "**", zahl2, "=", Potenzieren(zahl1, zahl2))

        
    
        neue_Rechnung = input("Willst du eine neue Rechnung starten? (y/n): ") #fragt ob man eine neue Rechnung starten will
        if neue_Rechnung == "n":
            break                                                               # bricht ab wenn man es nicht will


    else:
        print("Scheißdreck gemacht")                                              
